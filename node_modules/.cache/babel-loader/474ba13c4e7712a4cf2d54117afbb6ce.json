{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anand\\\\Desktop\\\\game\\\\tik\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst Bord = () => {\n  const initialSqures = Array(9).fill(null);\n  const [squares, setSqures] = useState(initialSqures);\n  const [xIsNext, setXISNext] = useState(true);\n\n  const handleClickEvent = i => {\n    //make a copy of squares state array\n    const newSqures = [...squares]; //mutatte the copy\n\n    newSqures[i] = xIsNext ? 'x' : 'O'; //call the setSquare function with\n\n    setSqures(newSqures);\n    setXISNext(!xIsNext);\n  };\n\n  const renderSqure = i => {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: squares[i],\n      onClickEvent: () => handleClickEvent(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    });\n  };\n\n  const winner = calculateWinner(squares);\n  const status = winner ? `winner: ${winner}` : `Next Player : ${xIsNext ? 'X' : 'O'}`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, status), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bord-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, renderSqure(0), renderSqure(1), renderSqure(2)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bord-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, renderSqure(3), renderSqure(4), renderSqure(5)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bord-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, renderSqure(6), renderSqure(7), renderSqure(8)));\n};\n\nconst Square = props => {\n  const [value, setValue] = useState(null);\n  return /*#__PURE__*/React.createElement(\"button\", {\n    class: \"squre\",\n    onClick: props.onClickEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, props.value);\n};\n\nconst Game = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, \"Tik - Tak - To\", /*#__PURE__*/React.createElement(Bord, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(Game, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let line of lines) {\n    const [a, b, c] = line;\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["C:/Users/anand/Desktop/game/tik/src/index.js"],"names":["React","useState","ReactDOM","Bord","initialSqures","Array","fill","squares","setSqures","xIsNext","setXISNext","handleClickEvent","i","newSqures","renderSqure","winner","calculateWinner","status","Square","props","value","setValue","onClickEvent","Game","render","document","getElementById","lines","line","a","b","c"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nconst Bord = () => {\n  const initialSqures = Array(9).fill(null); \nconst [squares, setSqures] =  useState(initialSqures);\nconst [xIsNext, setXISNext]= useState(true);\nconst handleClickEvent= (i) =>{\n //make a copy of squares state array\n  const newSqures= [...squares];\n  //mutatte the copy\n  newSqures[i]=xIsNext ? 'x' :'O';\n  //call the setSquare function with\n  setSqures(newSqures);\n  setXISNext(!xIsNext);\n};\n  const renderSqure = (i) =>{\n    return(\n      <Square value={squares[i]}\n      onClickEvent={()=> handleClickEvent(i)}\n      />\n    );\n  };\n  const winner = calculateWinner(squares);\n\n  const status = winner ? \n  `winner: ${winner}` :\n  `Next Player : ${ xIsNext ? 'X' : 'O'}`;\n  return(\n    <div >\n      <div className=\"status\">{status}</div>\n      <div className=\"bord-row\">\n         {renderSqure(0)}{renderSqure(1)}{renderSqure(2)}\n       </div>\n      <div className=\"bord-row\">\n        {renderSqure(3)}{renderSqure(4)}{renderSqure(5)}\n      </div>\n      <div className=\"bord-row\">\n        {renderSqure(6)}{renderSqure(7)}{renderSqure(8)}\n      </div>\n    </div>\n  )\n};\n\nconst Square = (props) => {\n const [value,setValue] = useState(null);\n\n\n  return(\n    <button class=\"squre\"\n     onClick ={props.onClickEvent}\n    >\n      {props.value}\n    </button>\n  )\n};\n\nconst Game = () => {\n  return (\n    <div className = \"game\">\n      Tik - Tak - To\n      <Bord/>\n      </div>\n\n  );\n};\n\nReactDOM.render(\n  <Game/>,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares){\n  const lines=[\n     [0,1,2], [3,4,5], [6,7,8],\n     [0,3,6], [1,4,7], [2,5,8],\n     [0,4,8], [2,4,6],\n  ];\n\n  for (let line of lines){\n    const [a,b,c]=line;\n\n    if(squares[a] && squares [a] === squares[b] && squares[a] ===squares[c] ){\n      return squares[a];\n    }\n  }\n  return null;\n}"]},"metadata":{},"sourceType":"module"}