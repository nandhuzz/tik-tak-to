{"version":3,"sources":["index.js"],"names":["Bord","initialSqures","Array","fill","useState","squares","setSqures","xIsNext","setXISNext","renderSqure","i","Square","value","onClickEvent","newSqures","winnerDeclared","Boolean","calculateWinner","squareFilled","handleClickEvent","winner","status","className","props","class","onClick","Game","refreshPage","window","location","reload","line","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"0MAKMA,G,MAAO,WACX,IAAMC,EAAgBC,MAAM,GAAGC,KAAK,MADnB,EAEWC,mBAASH,GAFpB,mBAEZI,EAFY,KAEHC,EAFG,OAGUF,oBAAS,GAHnB,mBAGZG,EAHY,KAGHC,EAHG,KAoBXC,EAAc,SAACC,GACnB,OACE,kBAACC,EAAD,CAAQC,MAAOP,EAAQK,GACvBG,aAAc,kBAnBI,SAACH,GAEvB,IAAMI,EAAU,YAAKT,GAEfU,EAAiBC,QAASC,EAAgBH,IAC1CI,EAAcF,QAAQF,EAAUJ,IACnCK,GAAkBG,IAKrBJ,EAAUJ,GAAGH,EAAU,IAAK,IAE5BD,EAAUQ,GACVN,GAAYD,IAKWY,CAAiBT,OAIlCU,EAASH,EAAgBZ,GAEzBgB,EAASD,EAAM,kBACVA,GADU,wBAEHb,EAAU,IAAM,KAClC,OACE,6BACE,yBAAKe,UAAU,UAAUD,GACzB,yBAAKC,UAAU,YACXb,EAAY,GAAIA,EAAY,GAAIA,EAAY,IAEhD,yBAAKa,UAAU,YACZb,EAAY,GAAIA,EAAY,GAAIA,EAAY,IAE/C,yBAAKa,UAAU,YACZb,EAAY,GAAIA,EAAY,GAAIA,EAAY,OAM/CE,EAAS,SAACY,GAAW,IAAD,EACAnB,mBAAS,MADT,6BAIxB,OACE,4BAAQoB,MAAM,QACbC,QAAUF,EAAMV,cAEdU,EAAMX,QAKPc,EAAO,WACX,OACE,yBAAKJ,UAAY,QAAjB,iBAEE,kBAACtB,EAAD,MAEC,4BAAQsB,UAAU,WAAWG,QAASE,GAAtC,cAUP,SAASA,IACPC,OAAOC,SAASC,QAAO,GAGzB,SAASb,EAAgBZ,GAOvB,IANA,IAMA,MANY,CACT,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GACvB,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GACvB,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,IAGjB,eAAuB,CAAlB,IAAI0B,EAAI,KAAU,cACPA,EADO,GACdC,EADc,KACZC,EADY,KACVC,EADU,KAGrB,GAAG7B,EAAQ2B,IAAM3B,EAAS2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAM3B,EAAQ6B,GACnE,OAAO7B,EAAQ2B,GAGnB,OAAO,KAvBTG,IAASC,OACP,kBAACV,EAAD,MACAW,SAASC,eAAe,W","file":"static/js/main.9af040e8.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nconst Bord = () => {\n  const initialSqures = Array(9).fill(null); \nconst [squares, setSqures] =  useState(initialSqures);\nconst [xIsNext, setXISNext]= useState(true);\nconst handleClickEvent= (i) =>{\n //make a copy of squares state array\n  const newSqures= [...squares];\n\n  const winnerDeclared = Boolean (calculateWinner(newSqures));\n  const squareFilled= Boolean(newSqures[i]);\n  if(winnerDeclared || squareFilled)\n  {\n    return ;\n  }\n  //mutatte the copy\n  newSqures[i]=xIsNext ? 'x' :'O';\n  //call the setSquare function with\n  setSqures(newSqures);\n  setXISNext(!xIsNext);\n};\n  const renderSqure = (i) =>{\n    return(\n      <Square value={squares[i]}\n      onClickEvent={()=> handleClickEvent(i)}\n      />\n    );\n  };\n  const winner = calculateWinner(squares);\n\n  const status = winner ? \n  `winner: ${winner}` :\n  `Next Player : ${ xIsNext ? 'X' : 'O'}`;\n  return(\n    <div >\n      <div className=\"status\">{status}</div>\n      <div className=\"bord-row\">\n         {renderSqure(0)}{renderSqure(1)}{renderSqure(2)}\n       </div>\n      <div className=\"bord-row\">\n        {renderSqure(3)}{renderSqure(4)}{renderSqure(5)}\n      </div>\n      <div className=\"bord-row\">\n        {renderSqure(6)}{renderSqure(7)}{renderSqure(8)}\n      </div>\n    </div>\n  )\n};\n\nconst Square = (props) => {\n const [value,setValue] = useState(null);\n\n\n  return(\n    <button class=\"squre\"\n     onClick ={props.onClickEvent}\n    >\n      {props.value}\n    </button>\n  )\n};\n\nconst Game = () => {\n  return (\n    <div className = \"game\">\n      Tik - Tak - To\n      <Bord/>\n      \n       <button className=\"new-game\" onClick={refreshPage}>New Game</button>\n     </div>\n  );\n};\n\nReactDOM.render(\n  <Game/>,\n  document.getElementById('root')\n);\n\nfunction refreshPage() {\n  window.location.reload(false);\n}\n\nfunction calculateWinner(squares){\n  const lines=[\n     [0,1,2], [3,4,5], [6,7,8],\n     [0,3,6], [1,4,7], [2,5,8],\n     [0,4,8], [2,4,6],\n  ];\n\n  for (let line of lines){\n    const [a,b,c]=line;\n\n    if(squares[a] && squares [a] === squares[b] && squares[a] ===squares[c] ){\n      return squares[a];\n    }\n  }\n  return null;\n}"],"sourceRoot":""}